{"ast":null,"code":"/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\n\nvar _toConsumableArray = require(\"C:/Users/kotgi/Desktop/Health-Chain/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"C:/Users/kotgi/Desktop/Health-Chain/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _objectSpread = require(\"C:/Users/kotgi/Desktop/Health-Chain/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread2\");\n\nvar _createForOfIteratorHelper = require(\"C:/Users/kotgi/Desktop/Health-Chain/dapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createForOfIteratorHelper\");\n\nvar core = require('web3-core');\n\nvar Method = require('web3-core-method');\n\nvar Account = require('eth-lib/lib/account');\n\nvar Hash = require('eth-lib/lib/hash');\n\nvar cryp = typeof global === 'undefined' ? require('crypto-browserify') : require('crypto');\n\nvar scrypt = require('scrypt-js');\n\nvar uuid = require('uuid');\n\nvar utils = require('web3-utils');\n\nvar helpers = require('web3-core-helpers');\n\nvar _require = require('@ethereumjs/tx'),\n    TransactionFactory = _require.TransactionFactory;\n\nvar Common = require('@ethereumjs/common').default;\n\nvar HardForks = require('@ethereumjs/common').Hardfork;\n\nvar isNot = function isNot(value) {\n  return typeof value === 'undefined' || value === null;\n};\n\nvar Accounts = function Accounts() {\n  var _this = this; // sets _requestmanager\n\n\n  core.packageInit(this, arguments); // remove unecessary core functions\n\n  delete this.BatchRequest;\n  delete this.extend;\n  var _ethereumCall = [new Method({\n    name: 'getNetworkId',\n    call: 'net_version',\n    params: 0,\n    outputFormatter: parseInt\n  }), new Method({\n    name: 'getChainId',\n    call: 'eth_chainId',\n    params: 0,\n    outputFormatter: utils.hexToNumber\n  }), new Method({\n    name: 'getGasPrice',\n    call: 'eth_gasPrice',\n    params: 0\n  }), new Method({\n    name: 'getTransactionCount',\n    call: 'eth_getTransactionCount',\n    params: 2,\n    inputFormatter: [function (address) {\n      if (utils.isAddress(address)) {\n        return address;\n      } else {\n        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n      }\n    }, function () {\n      return 'latest';\n    }]\n  }), new Method({\n    name: 'getBlockByNumber',\n    call: 'eth_getBlockByNumber',\n    params: 2,\n    inputFormatter: [function (blockNumber) {\n      return blockNumber ? utils.toHex(blockNumber) : 'latest';\n    }, function () {\n      return false;\n    }]\n  })]; // attach methods to this._ethereumCall\n\n  this._ethereumCall = {};\n\n  _ethereumCall.forEach(function (method) {\n    method.attachToObject(_this._ethereumCall);\n    method.setRequestManager(_this._requestManager);\n  });\n\n  this.wallet = new Wallet(this);\n};\n\nAccounts.prototype._addAccountFunctions = function (account) {\n  var _this = this; // add sign functions\n\n\n  account.signTransaction = function signTransaction(tx, callback) {\n    return _this.signTransaction(tx, account.privateKey, callback);\n  };\n\n  account.sign = function sign(data) {\n    return _this.sign(data, account.privateKey);\n  };\n\n  account.encrypt = function encrypt(password, options) {\n    return _this.encrypt(account.privateKey, password, options);\n  };\n\n  return account;\n};\n\nAccounts.prototype.create = function create(entropy) {\n  return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\n\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (!ignoreLength && privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\n\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n  var _this = this,\n      error = false,\n      transactionOptions = {},\n      hasTxSigningOptions = !!(tx && (tx.chain && tx.hardfork || tx.common));\n\n  callback = callback || function () {};\n\n  if (!tx) {\n    error = new Error('No transaction object given!');\n    callback(error);\n    return Promise.reject(error);\n  }\n\n  function signed(tx) {\n    var error = _validateTransactionForSigning(tx);\n\n    if (error) {\n      callback(error);\n      return Promise.reject(error);\n    }\n\n    try {\n      var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n      transaction.data = transaction.data || '0x';\n      transaction.value = transaction.value || '0x';\n      transaction.gasLimit = transaction.gasLimit || transaction.gas;\n      if (transaction.type === '0x1' && transaction.accessList === undefined) transaction.accessList = []; // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n\n      if (!hasTxSigningOptions) {\n        transactionOptions.common = Common.forCustomChain('mainnet', {\n          name: 'custom-network',\n          networkId: transaction.networkId,\n          chainId: transaction.chainId\n        }, transaction.hardfork || HardForks.London);\n        delete transaction.networkId;\n      } else {\n        if (transaction.common) {\n          transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n            name: transaction.common.customChain.name || 'custom-network',\n            networkId: transaction.common.customChain.networkId,\n            chainId: transaction.common.customChain.chainId\n          }, transaction.common.hardfork || HardForks.London);\n          delete transaction.common;\n        }\n\n        if (transaction.chain) {\n          transactionOptions.chain = transaction.chain;\n          delete transaction.chain;\n        }\n\n        if (transaction.hardfork) {\n          transactionOptions.hardfork = transaction.hardfork;\n          delete transaction.hardfork;\n        }\n      }\n\n      if (privateKey.startsWith('0x')) {\n        privateKey = privateKey.substring(2);\n      }\n\n      var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n      var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n      var validationErrors = signedTx.validate(true);\n\n      if (validationErrors.length > 0) {\n        var errorString = 'Signer Error: ';\n\n        var _iterator = _createForOfIteratorHelper(validationErrors),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var validationError = _step.value;\n            errorString += \"\".concat(errorString, \" \").concat(validationError, \".\");\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        throw new Error(errorString);\n      }\n\n      var rlpEncoded = signedTx.serialize().toString('hex');\n      var rawTransaction = '0x' + rlpEncoded;\n      var transactionHash = utils.keccak256(rawTransaction);\n      var result = {\n        messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n        v: '0x' + signedTx.v.toString('hex'),\n        r: '0x' + signedTx.r.toString('hex'),\n        s: '0x' + signedTx.s.toString('hex'),\n        rawTransaction: rawTransaction,\n        transactionHash: transactionHash\n      };\n      callback(null, result);\n      return result;\n    } catch (e) {\n      callback(e);\n      return Promise.reject(e);\n    }\n  }\n\n  tx.type = _handleTxType(tx); // Resolve immediately if nonce, chainId, price and signing options are provided\n\n  if (tx.nonce !== undefined && tx.chainId !== undefined && (tx.gasPrice !== undefined || tx.maxFeePerGas !== undefined && tx.maxPriorityFeePerGas !== undefined) && hasTxSigningOptions) {\n    return Promise.resolve(signed(tx));\n  } // Otherwise, get the missing info from the Ethereum Node\n\n\n  return Promise.all([isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId, isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce, isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1, _handleTxPricing(_this, tx)]).then(function (args) {\n    if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n      throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n    }\n\n    return signed(_objectSpread(_objectSpread({}, tx), {}, {\n      chainId: args[0],\n      nonce: args[1],\n      networkId: args[2]\n    }, args[3]));\n  });\n};\n\nfunction _validateTransactionForSigning(tx) {\n  if (tx.common && tx.chain && tx.hardfork) {\n    return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n  }\n\n  if (tx.chain && !tx.hardfork || tx.hardfork && !tx.chain) {\n    return new Error('When specifying chain and hardfork, both values must be defined. ' + 'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n  }\n\n  if (!tx.gas && !tx.gasLimit && !tx.maxPriorityFeePerGas && !tx.maxFeePerGas) {\n    return new Error('\"gas\" is missing');\n  }\n\n  if (tx.gas && tx.gasPrice) {\n    if (tx.gas < 0 || tx.gasPrice < 0) {\n      return new Error('Gas or gasPrice is lower than 0');\n    }\n  } else {\n    if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n      return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n    }\n  }\n\n  if (tx.nonce < 0 || tx.chainId < 0) {\n    return new Error('Nonce or chainId is lower than 0');\n  }\n\n  return;\n}\n\nfunction _handleTxType(tx) {\n  // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n  var hasEip1559 = tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined;\n  var txType;\n\n  if (tx.type !== undefined) {\n    txType = utils.toHex(tx.type);\n  } else if (tx.type === undefined && hasEip1559) {\n    txType = '0x2';\n  }\n\n  if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559)) throw Error(\"eip-1559 transactions don't support gasPrice\");\n  if ((txType === '0x1' || txType === '0x0') && hasEip1559) throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n\n  if (hasEip1559 || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London) {\n    txType = '0x2';\n  } else if (tx.accessList || tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin || tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin) {\n    txType = '0x1';\n  }\n\n  return txType;\n}\n\nfunction _handleTxPricing(_this, tx) {\n  return new Promise(function (resolve, reject) {\n    try {\n      if ((tx.type === undefined || tx.type < '0x2') && tx.gasPrice !== undefined) {\n        // Legacy transaction, return provided gasPrice\n        resolve({\n          gasPrice: tx.gasPrice\n        });\n      } else {\n        Promise.all([_this._ethereumCall.getBlockByNumber(), _this._ethereumCall.getGasPrice()]).then(function (responses) {\n          var _responses = _slicedToArray(responses, 2),\n              block = _responses[0],\n              gasPrice = _responses[1];\n\n          if (tx.type === '0x2' && block && block.baseFeePerGas) {\n            // The network supports EIP-1559\n            // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n            var maxPriorityFeePerGas, maxFeePerGas;\n\n            if (tx.gasPrice) {\n              // Using legacy gasPrice property on an eip-1559 network,\n              // so use gasPrice as both fee properties\n              maxPriorityFeePerGas = tx.gasPrice;\n              maxFeePerGas = tx.gasPrice;\n              delete tx.gasPrice;\n            } else {\n              maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n\n              maxFeePerGas = tx.maxFeePerGas || utils.toHex(utils.toBN(block.baseFeePerGas).mul(utils.toBN(2)).add(utils.toBN(maxPriorityFeePerGas)));\n            }\n\n            resolve({\n              maxFeePerGas: maxFeePerGas,\n              maxPriorityFeePerGas: maxPriorityFeePerGas\n            });\n          } else {\n            if (tx.maxPriorityFeePerGas || tx.maxFeePerGas) throw Error(\"Network doesn't support eip-1559\");\n            resolve({\n              gasPrice: gasPrice\n            });\n          }\n        });\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n/* jshint ignore:start */\n\n\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx) {\n  var txOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  // Rely on EthereumJs/tx to determine the type of transaction\n  var data = Buffer.from(rawTx.slice(2), \"hex\");\n  var tx = TransactionFactory.fromSerializedData(data); //update checksum\n\n  return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\n\n\nAccounts.prototype.hashMessage = function hashMessage(data) {\n  var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n  var messageBytes = utils.hexToBytes(messageHex);\n  var messageBuffer = Buffer.from(messageBytes);\n  var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n  var preambleBuffer = Buffer.from(preamble);\n  var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n  return Hash.keccak256s(ethMessage);\n};\n\nAccounts.prototype.sign = function sign(data, privateKey) {\n  if (!privateKey.startsWith('0x')) {\n    privateKey = '0x' + privateKey;\n  } // 64 hex characters + hex-prefix\n\n\n  if (privateKey.length !== 66) {\n    throw new Error(\"Private key must be 32 bytes long\");\n  }\n\n  var hash = this.hashMessage(data);\n  var signature = Account.sign(hash, privateKey);\n  var vrs = Account.decodeSignature(signature);\n  return {\n    message: data,\n    messageHash: hash,\n    v: vrs[0],\n    r: vrs[1],\n    s: vrs[2],\n    signature: signature\n  };\n};\n\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n  var args = [].slice.apply(arguments);\n\n  if (!!message && typeof message === 'object') {\n    return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n  }\n\n  if (!preFixed) {\n    message = this.hashMessage(message);\n  }\n\n  if (args.length >= 4) {\n    preFixed = args.slice(-1)[0];\n    preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n    return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n  }\n\n  return Account.recover(message, signature);\n}; // Taken from https://github.com/ethereumjs/ethereumjs-wallet\n\n\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n  /* jshint maxcomplexity: 10 */\n  if (!(typeof password === 'string')) {\n    throw new Error('No password given.');\n  }\n\n  var json = !!v3Keystore && typeof v3Keystore === 'object' ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n\n  if (json.version !== 3) {\n    throw new Error('Not a valid V3 wallet');\n  }\n\n  var derivedKey;\n  var kdfparams;\n\n  if (json.crypto.kdf === 'scrypt') {\n    kdfparams = json.crypto.kdfparams; // FIXME: support progress reporting callback\n\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else if (json.crypto.kdf === 'pbkdf2') {\n    kdfparams = json.crypto.kdfparams;\n\n    if (kdfparams.prf !== 'hmac-sha256') {\n      throw new Error('Unsupported parameters to PBKDF2');\n    }\n\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else {\n    throw new Error('Unsupported key derivation scheme');\n  }\n\n  var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n\n  if (mac !== json.crypto.mac) {\n    throw new Error('Key derivation failed - possibly wrong password');\n  }\n\n  var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n  var seed = '0x' + Buffer.from([].concat(_toConsumableArray(decipher.update(ciphertext)), _toConsumableArray(decipher.final()))).toString('hex');\n  return this.privateKeyToAccount(seed, true);\n};\n\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n  /* jshint maxcomplexity: 20 */\n  var account = this.privateKeyToAccount(privateKey, true);\n  options = options || {};\n  var salt = options.salt || cryp.randomBytes(32);\n  var iv = options.iv || cryp.randomBytes(16);\n  var derivedKey;\n  var kdf = options.kdf || 'scrypt';\n  var kdfparams = {\n    dklen: options.dklen || 32,\n    salt: salt.toString('hex')\n  };\n\n  if (kdf === 'pbkdf2') {\n    kdfparams.c = options.c || 262144;\n    kdfparams.prf = 'hmac-sha256';\n    derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n  } else if (kdf === 'scrypt') {\n    // FIXME: support progress reporting callback\n    kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n\n    kdfparams.r = options.r || 8;\n    kdfparams.p = options.p || 1;\n    derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n  } else {\n    throw new Error('Unsupported kdf');\n  }\n\n  var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n\n  if (!cipher) {\n    throw new Error('Unsupported cipher');\n  }\n\n  var ciphertext = Buffer.from([].concat(_toConsumableArray(cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex'))), _toConsumableArray(cipher.final())));\n  var mac = utils.sha3(Buffer.from([].concat(_toConsumableArray(derivedKey.slice(16, 32)), _toConsumableArray(ciphertext)))).replace('0x', '');\n  return {\n    version: 3,\n    id: uuid.v4({\n      random: options.uuid || cryp.randomBytes(16)\n    }),\n    address: account.address.toLowerCase().replace('0x', ''),\n    crypto: {\n      ciphertext: ciphertext.toString('hex'),\n      cipherparams: {\n        iv: iv.toString('hex')\n      },\n      cipher: options.cipher || 'aes-128-ctr',\n      kdf: kdf,\n      kdfparams: kdfparams,\n      mac: mac.toString('hex')\n    }\n  };\n}; // Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\n\n\nfunction Wallet(accounts) {\n  this._accounts = accounts;\n  this.length = 0;\n  this.defaultKeyName = 'web3js_wallet';\n}\n\nWallet.prototype._findSafeIndex = function (pointer) {\n  pointer = pointer || 0;\n\n  if (this.hasOwnProperty(pointer)) {\n    return this._findSafeIndex(pointer + 1);\n  } else {\n    return pointer;\n  }\n};\n\nWallet.prototype._currentIndexes = function () {\n  var keys = Object.keys(this);\n  var indexes = keys.map(function (key) {\n    return parseInt(key);\n  }).filter(function (n) {\n    return n < 9e20;\n  });\n  return indexes;\n};\n\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n  for (var i = 0; i < numberOfAccounts; ++i) {\n    this.add(this._accounts.create(entropy).privateKey);\n  }\n\n  return this;\n};\n\nWallet.prototype.add = function (account) {\n  if (typeof account === 'string') {\n    account = this._accounts.privateKeyToAccount(account);\n  }\n\n  if (!this[account.address]) {\n    account = this._accounts.privateKeyToAccount(account.privateKey);\n    account.index = this._findSafeIndex();\n    this[account.index] = account;\n    this[account.address] = account;\n    this[account.address.toLowerCase()] = account;\n    this.length++;\n    return account;\n  } else {\n    return this[account.address];\n  }\n};\n\nWallet.prototype.remove = function (addressOrIndex) {\n  var account = this[addressOrIndex];\n\n  if (account && account.address) {\n    // address\n    this[account.address].privateKey = null;\n    delete this[account.address]; // address lowercase\n\n    this[account.address.toLowerCase()].privateKey = null;\n    delete this[account.address.toLowerCase()]; // index\n\n    this[account.index].privateKey = null;\n    delete this[account.index];\n    this.length--;\n    return true;\n  } else {\n    return false;\n  }\n};\n\nWallet.prototype.clear = function () {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  indexes.forEach(function (index) {\n    _this.remove(index);\n  });\n  return this;\n};\n\nWallet.prototype.encrypt = function (password, options) {\n  var _this = this;\n\n  var indexes = this._currentIndexes();\n\n  var accounts = indexes.map(function (index) {\n    return _this[index].encrypt(password, options);\n  });\n  return accounts;\n};\n\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n  var _this = this;\n\n  encryptedWallet.forEach(function (keystore) {\n    var account = _this._accounts.decrypt(keystore, password);\n\n    if (account) {\n      _this.add(account);\n    } else {\n      throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n    }\n  });\n  return this;\n};\n\nWallet.prototype.save = function (password, keyName) {\n  localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n  return true;\n};\n\nWallet.prototype.load = function (password, keyName) {\n  var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n\n  if (keystore) {\n    try {\n      keystore = JSON.parse(keystore);\n    } catch (e) {}\n  }\n\n  return this.decrypt(keystore || [], password);\n};\n\nif (!storageAvailable('localStorage')) {\n  delete Wallet.prototype.save;\n  delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\n\n\nfunction storageAvailable(type) {\n  var storage;\n\n  try {\n    storage = window[type];\n    var x = '__storage_test__';\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === 'QuotaExceededError' || // Firefox\n    e.name === 'NS_ERROR_DOM_QUOTA_REACHED') && storage && storage.length !== 0;\n  }\n}\n\nmodule.exports = Accounts;","map":{"version":3,"sources":["C:/Users/kotgi/Desktop/Health-Chain/dapp/node_modules/web3-eth-accounts/lib/index.js"],"names":["core","require","Method","Account","Hash","cryp","global","scrypt","uuid","utils","helpers","TransactionFactory","Common","default","HardForks","Hardfork","isNot","value","Accounts","_this","packageInit","arguments","BatchRequest","extend","_ethereumCall","name","call","params","outputFormatter","parseInt","hexToNumber","inputFormatter","address","isAddress","Error","blockNumber","toHex","forEach","method","attachToObject","setRequestManager","_requestManager","wallet","Wallet","prototype","_addAccountFunctions","account","signTransaction","tx","callback","privateKey","sign","data","encrypt","password","options","create","entropy","randomHex","privateKeyToAccount","ignoreLength","startsWith","length","fromPrivate","error","transactionOptions","hasTxSigningOptions","chain","hardfork","common","Promise","reject","signed","_validateTransactionForSigning","transaction","formatters","inputCallFormatter","Object","assign","gasLimit","gas","type","accessList","undefined","forCustomChain","networkId","chainId","London","baseChain","customChain","substring","ethTx","fromTxData","signedTx","Buffer","from","validationErrors","validate","errorString","validationError","rlpEncoded","serialize","toString","rawTransaction","transactionHash","keccak256","result","messageHash","getMessageToSign","v","r","s","e","_handleTxType","nonce","gasPrice","maxFeePerGas","maxPriorityFeePerGas","resolve","all","getChainId","getTransactionCount","getNetworkId","_handleTxPricing","then","args","JSON","stringify","hasEip1559","txType","toLowerCase","Berlin","getBlockByNumber","getGasPrice","responses","block","baseFeePerGas","toBN","mul","add","recoverTransaction","rawTx","txOptions","slice","fromSerializedData","toChecksumAddress","getSenderAddress","hashMessage","messageHex","isHexStrict","utf8ToHex","messageBytes","hexToBytes","messageBuffer","preamble","preambleBuffer","ethMessage","concat","keccak256s","hash","signature","vrs","decodeSignature","message","recover","preFixed","apply","encodeSignature","decrypt","v3Keystore","nonStrict","json","parse","version","derivedKey","kdfparams","crypto","kdf","syncScrypt","salt","n","p","dklen","prf","pbkdf2Sync","c","ciphertext","mac","sha3","replace","decipher","createDecipheriv","cipher","cipherparams","iv","seed","update","final","randomBytes","createCipheriv","id","v4","random","accounts","_accounts","defaultKeyName","_findSafeIndex","pointer","hasOwnProperty","_currentIndexes","keys","indexes","map","key","filter","numberOfAccounts","i","index","remove","addressOrIndex","clear","encryptedWallet","keystore","save","keyName","localStorage","setItem","load","getItem","storageAvailable","storage","window","x","removeItem","code","module","exports"],"mappings":"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","sourcesContent":["/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file accounts.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n'use strict';\nvar core = require('web3-core');\nvar Method = require('web3-core-method');\nvar Account = require('eth-lib/lib/account');\nvar Hash = require('eth-lib/lib/hash');\nvar cryp = (typeof global === 'undefined') ? require('crypto-browserify') : require('crypto');\nvar scrypt = require('scrypt-js');\nvar uuid = require('uuid');\nvar utils = require('web3-utils');\nvar helpers = require('web3-core-helpers');\nvar { TransactionFactory } = require('@ethereumjs/tx');\nvar Common = require('@ethereumjs/common').default;\nvar HardForks = require('@ethereumjs/common').Hardfork;\nvar isNot = function (value) {\n    return (typeof value === 'undefined') || value === null;\n};\nvar Accounts = function Accounts() {\n    var _this = this;\n    // sets _requestmanager\n    core.packageInit(this, arguments);\n    // remove unecessary core functions\n    delete this.BatchRequest;\n    delete this.extend;\n    var _ethereumCall = [\n        new Method({\n            name: 'getNetworkId',\n            call: 'net_version',\n            params: 0,\n            outputFormatter: parseInt\n        }),\n        new Method({\n            name: 'getChainId',\n            call: 'eth_chainId',\n            params: 0,\n            outputFormatter: utils.hexToNumber\n        }),\n        new Method({\n            name: 'getGasPrice',\n            call: 'eth_gasPrice',\n            params: 0\n        }),\n        new Method({\n            name: 'getTransactionCount',\n            call: 'eth_getTransactionCount',\n            params: 2,\n            inputFormatter: [function (address) {\n                    if (utils.isAddress(address)) {\n                        return address;\n                    }\n                    else {\n                        throw new Error('Address ' + address + ' is not a valid address to get the \"transactionCount\".');\n                    }\n                }, function () {\n                    return 'latest';\n                }]\n        }),\n        new Method({\n            name: 'getBlockByNumber',\n            call: 'eth_getBlockByNumber',\n            params: 2,\n            inputFormatter: [function (blockNumber) {\n                    return blockNumber ? utils.toHex(blockNumber) : 'latest';\n                }, function () {\n                    return false;\n                }]\n        }),\n    ];\n    // attach methods to this._ethereumCall\n    this._ethereumCall = {};\n    _ethereumCall.forEach((method) => {\n        method.attachToObject(_this._ethereumCall);\n        method.setRequestManager(_this._requestManager);\n    });\n    this.wallet = new Wallet(this);\n};\nAccounts.prototype._addAccountFunctions = function (account) {\n    var _this = this;\n    // add sign functions\n    account.signTransaction = function signTransaction(tx, callback) {\n        return _this.signTransaction(tx, account.privateKey, callback);\n    };\n    account.sign = function sign(data) {\n        return _this.sign(data, account.privateKey);\n    };\n    account.encrypt = function encrypt(password, options) {\n        return _this.encrypt(account.privateKey, password, options);\n    };\n    return account;\n};\nAccounts.prototype.create = function create(entropy) {\n    return this._addAccountFunctions(Account.create(entropy || utils.randomHex(32)));\n};\nAccounts.prototype.privateKeyToAccount = function privateKeyToAccount(privateKey, ignoreLength) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (!ignoreLength && privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    return this._addAccountFunctions(Account.fromPrivate(privateKey));\n};\nAccounts.prototype.signTransaction = function signTransaction(tx, privateKey, callback) {\n    var _this = this, error = false, transactionOptions = {}, hasTxSigningOptions = !!(tx && ((tx.chain && tx.hardfork) || tx.common));\n    callback = callback || function () { };\n    if (!tx) {\n        error = new Error('No transaction object given!');\n        callback(error);\n        return Promise.reject(error);\n    }\n    function signed(tx) {\n        const error = _validateTransactionForSigning(tx);\n        if (error) {\n            callback(error);\n            return Promise.reject(error);\n        }\n        try {\n            var transaction = helpers.formatters.inputCallFormatter(Object.assign({}, tx));\n            transaction.data = transaction.data || '0x';\n            transaction.value = transaction.value || '0x';\n            transaction.gasLimit = transaction.gasLimit || transaction.gas;\n            if (transaction.type === '0x1' && transaction.accessList === undefined)\n                transaction.accessList = [];\n            // Because tx has no @ethereumjs/tx signing options we use fetched vals.\n            if (!hasTxSigningOptions) {\n                transactionOptions.common = Common.forCustomChain('mainnet', {\n                    name: 'custom-network',\n                    networkId: transaction.networkId,\n                    chainId: transaction.chainId\n                }, transaction.hardfork || HardForks.London);\n                delete transaction.networkId;\n            }\n            else {\n                if (transaction.common) {\n                    transactionOptions.common = Common.forCustomChain(transaction.common.baseChain || 'mainnet', {\n                        name: transaction.common.customChain.name || 'custom-network',\n                        networkId: transaction.common.customChain.networkId,\n                        chainId: transaction.common.customChain.chainId\n                    }, transaction.common.hardfork || HardForks.London);\n                    delete transaction.common;\n                }\n                if (transaction.chain) {\n                    transactionOptions.chain = transaction.chain;\n                    delete transaction.chain;\n                }\n                if (transaction.hardfork) {\n                    transactionOptions.hardfork = transaction.hardfork;\n                    delete transaction.hardfork;\n                }\n            }\n            if (privateKey.startsWith('0x')) {\n                privateKey = privateKey.substring(2);\n            }\n            var ethTx = TransactionFactory.fromTxData(transaction, transactionOptions);\n            var signedTx = ethTx.sign(Buffer.from(privateKey, 'hex'));\n            var validationErrors = signedTx.validate(true);\n            if (validationErrors.length > 0) {\n                let errorString = 'Signer Error: ';\n                for (const validationError of validationErrors) {\n                    errorString += `${errorString} ${validationError}.`;\n                }\n                throw new Error(errorString);\n            }\n            var rlpEncoded = signedTx.serialize().toString('hex');\n            var rawTransaction = '0x' + rlpEncoded;\n            var transactionHash = utils.keccak256(rawTransaction);\n            var result = {\n                messageHash: '0x' + Buffer.from(signedTx.getMessageToSign(true)).toString('hex'),\n                v: '0x' + signedTx.v.toString('hex'),\n                r: '0x' + signedTx.r.toString('hex'),\n                s: '0x' + signedTx.s.toString('hex'),\n                rawTransaction: rawTransaction,\n                transactionHash: transactionHash\n            };\n            callback(null, result);\n            return result;\n        }\n        catch (e) {\n            callback(e);\n            return Promise.reject(e);\n        }\n    }\n    tx.type = _handleTxType(tx);\n    // Resolve immediately if nonce, chainId, price and signing options are provided\n    if (tx.nonce !== undefined &&\n        tx.chainId !== undefined &&\n        (tx.gasPrice !== undefined ||\n            (tx.maxFeePerGas !== undefined &&\n                tx.maxPriorityFeePerGas !== undefined)) &&\n        hasTxSigningOptions) {\n        return Promise.resolve(signed(tx));\n    }\n    // Otherwise, get the missing info from the Ethereum Node\n    return Promise.all([\n        isNot(tx.chainId) ? _this._ethereumCall.getChainId() : tx.chainId,\n        isNot(tx.nonce) ? _this._ethereumCall.getTransactionCount(_this.privateKeyToAccount(privateKey).address) : tx.nonce,\n        isNot(hasTxSigningOptions) ? _this._ethereumCall.getNetworkId() : 1,\n        _handleTxPricing(_this, tx)\n    ]).then(function (args) {\n        if (isNot(args[0]) || isNot(args[1]) || isNot(args[2]) || isNot(args[3])) {\n            throw new Error('One of the values \"chainId\", \"networkId\", \"gasPrice\", or \"nonce\" couldn\\'t be fetched: ' + JSON.stringify(args));\n        }\n        return signed({\n            ...tx,\n            chainId: args[0],\n            nonce: args[1],\n            networkId: args[2],\n            ...args[3] // Will either be gasPrice or maxFeePerGas and maxPriorityFeePerGas\n        });\n    });\n};\nfunction _validateTransactionForSigning(tx) {\n    if (tx.common && (tx.chain && tx.hardfork)) {\n        return new Error('Please provide the @ethereumjs/common object or the chain and hardfork property but not all together.');\n    }\n    if ((tx.chain && !tx.hardfork) || (tx.hardfork && !tx.chain)) {\n        return new Error('When specifying chain and hardfork, both values must be defined. ' +\n            'Received \"chain\": ' + tx.chain + ', \"hardfork\": ' + tx.hardfork);\n    }\n    if ((!tx.gas && !tx.gasLimit) &&\n        (!tx.maxPriorityFeePerGas && !tx.maxFeePerGas)) {\n        return new Error('\"gas\" is missing');\n    }\n    if (tx.gas && tx.gasPrice) {\n        if (tx.gas < 0 || tx.gasPrice < 0) {\n            return new Error('Gas or gasPrice is lower than 0');\n        }\n    }\n    else {\n        if (tx.maxPriorityFeePerGas < 0 || tx.maxFeePerGas < 0) {\n            return new Error('maxPriorityFeePerGas or maxFeePerGas is lower than 0');\n        }\n    }\n    if (tx.nonce < 0 || tx.chainId < 0) {\n        return new Error('Nonce or chainId is lower than 0');\n    }\n    return;\n}\nfunction _handleTxType(tx) {\n    // Taken from https://github.com/ethers-io/ethers.js/blob/2a7ce0e72a1e0c9469e10392b0329e75e341cf18/packages/abstract-signer/src.ts/index.ts#L215\n    const hasEip1559 = (tx.maxFeePerGas !== undefined || tx.maxPriorityFeePerGas !== undefined);\n    let txType;\n    if (tx.type !== undefined) {\n        txType = utils.toHex(tx.type);\n    }\n    else if (tx.type === undefined && hasEip1559) {\n        txType = '0x2';\n    }\n    if (tx.gasPrice !== undefined && (txType === '0x2' || hasEip1559))\n        throw Error(\"eip-1559 transactions don't support gasPrice\");\n    if ((txType === '0x1' || txType === '0x0') && hasEip1559)\n        throw Error(\"pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas\");\n    if (hasEip1559 ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.London) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.London))) {\n        txType = '0x2';\n    }\n    else if (tx.accessList ||\n        ((tx.common && tx.common.hardfork && tx.common.hardfork.toLowerCase() === HardForks.Berlin) ||\n            (tx.hardfork && tx.hardfork.toLowerCase() === HardForks.Berlin))) {\n        txType = '0x1';\n    }\n    return txType;\n}\nfunction _handleTxPricing(_this, tx) {\n    return new Promise((resolve, reject) => {\n        try {\n            if ((tx.type === undefined || tx.type < '0x2')\n                && tx.gasPrice !== undefined) {\n                // Legacy transaction, return provided gasPrice\n                resolve({ gasPrice: tx.gasPrice });\n            }\n            else {\n                Promise.all([\n                    _this._ethereumCall.getBlockByNumber(),\n                    _this._ethereumCall.getGasPrice()\n                ]).then(responses => {\n                    const [block, gasPrice] = responses;\n                    if ((tx.type === '0x2') &&\n                        block && block.baseFeePerGas) {\n                        // The network supports EIP-1559\n                        // Taken from https://github.com/ethers-io/ethers.js/blob/ba6854bdd5a912fe873d5da494cb5c62c190adde/packages/abstract-provider/src.ts/index.ts#L230\n                        let maxPriorityFeePerGas, maxFeePerGas;\n                        if (tx.gasPrice) {\n                            // Using legacy gasPrice property on an eip-1559 network,\n                            // so use gasPrice as both fee properties\n                            maxPriorityFeePerGas = tx.gasPrice;\n                            maxFeePerGas = tx.gasPrice;\n                            delete tx.gasPrice;\n                        }\n                        else {\n                            maxPriorityFeePerGas = tx.maxPriorityFeePerGas || '0x9502F900'; // 2.5 Gwei\n                            maxFeePerGas = tx.maxFeePerGas ||\n                                utils.toHex(utils.toBN(block.baseFeePerGas)\n                                    .mul(utils.toBN(2))\n                                    .add(utils.toBN(maxPriorityFeePerGas)));\n                        }\n                        resolve({ maxFeePerGas, maxPriorityFeePerGas });\n                    }\n                    else {\n                        if (tx.maxPriorityFeePerGas || tx.maxFeePerGas)\n                            throw Error(\"Network doesn't support eip-1559\");\n                        resolve({ gasPrice });\n                    }\n                });\n            }\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n/* jshint ignore:start */\nAccounts.prototype.recoverTransaction = function recoverTransaction(rawTx, txOptions = {}) {\n    // Rely on EthereumJs/tx to determine the type of transaction\n    const data = Buffer.from(rawTx.slice(2), \"hex\");\n    const tx = TransactionFactory.fromSerializedData(data);\n    //update checksum\n    return utils.toChecksumAddress(tx.getSenderAddress().toString(\"hex\"));\n};\n/* jshint ignore:end */\nAccounts.prototype.hashMessage = function hashMessage(data) {\n    var messageHex = utils.isHexStrict(data) ? data : utils.utf8ToHex(data);\n    var messageBytes = utils.hexToBytes(messageHex);\n    var messageBuffer = Buffer.from(messageBytes);\n    var preamble = '\\x19Ethereum Signed Message:\\n' + messageBytes.length;\n    var preambleBuffer = Buffer.from(preamble);\n    var ethMessage = Buffer.concat([preambleBuffer, messageBuffer]);\n    return Hash.keccak256s(ethMessage);\n};\nAccounts.prototype.sign = function sign(data, privateKey) {\n    if (!privateKey.startsWith('0x')) {\n        privateKey = '0x' + privateKey;\n    }\n    // 64 hex characters + hex-prefix\n    if (privateKey.length !== 66) {\n        throw new Error(\"Private key must be 32 bytes long\");\n    }\n    var hash = this.hashMessage(data);\n    var signature = Account.sign(hash, privateKey);\n    var vrs = Account.decodeSignature(signature);\n    return {\n        message: data,\n        messageHash: hash,\n        v: vrs[0],\n        r: vrs[1],\n        s: vrs[2],\n        signature: signature\n    };\n};\nAccounts.prototype.recover = function recover(message, signature, preFixed) {\n    var args = [].slice.apply(arguments);\n    if (!!message && typeof message === 'object') {\n        return this.recover(message.messageHash, Account.encodeSignature([message.v, message.r, message.s]), true);\n    }\n    if (!preFixed) {\n        message = this.hashMessage(message);\n    }\n    if (args.length >= 4) {\n        preFixed = args.slice(-1)[0];\n        preFixed = typeof preFixed === 'boolean' ? !!preFixed : false;\n        return this.recover(message, Account.encodeSignature(args.slice(1, 4)), preFixed); // v, r, s\n    }\n    return Account.recover(message, signature);\n};\n// Taken from https://github.com/ethereumjs/ethereumjs-wallet\nAccounts.prototype.decrypt = function (v3Keystore, password, nonStrict) {\n    /* jshint maxcomplexity: 10 */\n    if (!(typeof password === 'string')) {\n        throw new Error('No password given.');\n    }\n    var json = (!!v3Keystore && typeof v3Keystore === 'object') ? v3Keystore : JSON.parse(nonStrict ? v3Keystore.toLowerCase() : v3Keystore);\n    if (json.version !== 3) {\n        throw new Error('Not a valid V3 wallet');\n    }\n    var derivedKey;\n    var kdfparams;\n    if (json.crypto.kdf === 'scrypt') {\n        kdfparams = json.crypto.kdfparams;\n        // FIXME: support progress reporting callback\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else if (json.crypto.kdf === 'pbkdf2') {\n        kdfparams = json.crypto.kdfparams;\n        if (kdfparams.prf !== 'hmac-sha256') {\n            throw new Error('Unsupported parameters to PBKDF2');\n        }\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else {\n        throw new Error('Unsupported key derivation scheme');\n    }\n    var ciphertext = Buffer.from(json.crypto.ciphertext, 'hex');\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    if (mac !== json.crypto.mac) {\n        throw new Error('Key derivation failed - possibly wrong password');\n    }\n    var decipher = cryp.createDecipheriv(json.crypto.cipher, derivedKey.slice(0, 16), Buffer.from(json.crypto.cipherparams.iv, 'hex'));\n    var seed = '0x' + Buffer.from([...decipher.update(ciphertext), ...decipher.final()]).toString('hex');\n    return this.privateKeyToAccount(seed, true);\n};\nAccounts.prototype.encrypt = function (privateKey, password, options) {\n    /* jshint maxcomplexity: 20 */\n    var account = this.privateKeyToAccount(privateKey, true);\n    options = options || {};\n    var salt = options.salt || cryp.randomBytes(32);\n    var iv = options.iv || cryp.randomBytes(16);\n    var derivedKey;\n    var kdf = options.kdf || 'scrypt';\n    var kdfparams = {\n        dklen: options.dklen || 32,\n        salt: salt.toString('hex')\n    };\n    if (kdf === 'pbkdf2') {\n        kdfparams.c = options.c || 262144;\n        kdfparams.prf = 'hmac-sha256';\n        derivedKey = cryp.pbkdf2Sync(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.c, kdfparams.dklen, 'sha256');\n    }\n    else if (kdf === 'scrypt') {\n        // FIXME: support progress reporting callback\n        kdfparams.n = options.n || 8192; // 2048 4096 8192 16384\n        kdfparams.r = options.r || 8;\n        kdfparams.p = options.p || 1;\n        derivedKey = scrypt.syncScrypt(Buffer.from(password), Buffer.from(kdfparams.salt, 'hex'), kdfparams.n, kdfparams.r, kdfparams.p, kdfparams.dklen);\n    }\n    else {\n        throw new Error('Unsupported kdf');\n    }\n    var cipher = cryp.createCipheriv(options.cipher || 'aes-128-ctr', derivedKey.slice(0, 16), iv);\n    if (!cipher) {\n        throw new Error('Unsupported cipher');\n    }\n    var ciphertext = Buffer.from([\n        ...cipher.update(Buffer.from(account.privateKey.replace('0x', ''), 'hex')),\n        ...cipher.final()\n    ]);\n    var mac = utils.sha3(Buffer.from([...derivedKey.slice(16, 32), ...ciphertext])).replace('0x', '');\n    return {\n        version: 3,\n        id: uuid.v4({ random: options.uuid || cryp.randomBytes(16) }),\n        address: account.address.toLowerCase().replace('0x', ''),\n        crypto: {\n            ciphertext: ciphertext.toString('hex'),\n            cipherparams: {\n                iv: iv.toString('hex')\n            },\n            cipher: options.cipher || 'aes-128-ctr',\n            kdf: kdf,\n            kdfparams: kdfparams,\n            mac: mac.toString('hex')\n        }\n    };\n};\n// Note: this is trying to follow closely the specs on\n// http://web3js.readthedocs.io/en/1.0/web3-eth-accounts.html\nfunction Wallet(accounts) {\n    this._accounts = accounts;\n    this.length = 0;\n    this.defaultKeyName = 'web3js_wallet';\n}\nWallet.prototype._findSafeIndex = function (pointer) {\n    pointer = pointer || 0;\n    if (this.hasOwnProperty(pointer)) {\n        return this._findSafeIndex(pointer + 1);\n    }\n    else {\n        return pointer;\n    }\n};\nWallet.prototype._currentIndexes = function () {\n    var keys = Object.keys(this);\n    var indexes = keys\n        .map(function (key) {\n        return parseInt(key);\n    })\n        .filter(function (n) {\n        return (n < 9e20);\n    });\n    return indexes;\n};\nWallet.prototype.create = function (numberOfAccounts, entropy) {\n    for (var i = 0; i < numberOfAccounts; ++i) {\n        this.add(this._accounts.create(entropy).privateKey);\n    }\n    return this;\n};\nWallet.prototype.add = function (account) {\n    if (typeof account === 'string') {\n        account = this._accounts.privateKeyToAccount(account);\n    }\n    if (!this[account.address]) {\n        account = this._accounts.privateKeyToAccount(account.privateKey);\n        account.index = this._findSafeIndex();\n        this[account.index] = account;\n        this[account.address] = account;\n        this[account.address.toLowerCase()] = account;\n        this.length++;\n        return account;\n    }\n    else {\n        return this[account.address];\n    }\n};\nWallet.prototype.remove = function (addressOrIndex) {\n    var account = this[addressOrIndex];\n    if (account && account.address) {\n        // address\n        this[account.address].privateKey = null;\n        delete this[account.address];\n        // address lowercase\n        this[account.address.toLowerCase()].privateKey = null;\n        delete this[account.address.toLowerCase()];\n        // index\n        this[account.index].privateKey = null;\n        delete this[account.index];\n        this.length--;\n        return true;\n    }\n    else {\n        return false;\n    }\n};\nWallet.prototype.clear = function () {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    indexes.forEach(function (index) {\n        _this.remove(index);\n    });\n    return this;\n};\nWallet.prototype.encrypt = function (password, options) {\n    var _this = this;\n    var indexes = this._currentIndexes();\n    var accounts = indexes.map(function (index) {\n        return _this[index].encrypt(password, options);\n    });\n    return accounts;\n};\nWallet.prototype.decrypt = function (encryptedWallet, password) {\n    var _this = this;\n    encryptedWallet.forEach(function (keystore) {\n        var account = _this._accounts.decrypt(keystore, password);\n        if (account) {\n            _this.add(account);\n        }\n        else {\n            throw new Error('Couldn\\'t decrypt accounts. Password wrong?');\n        }\n    });\n    return this;\n};\nWallet.prototype.save = function (password, keyName) {\n    localStorage.setItem(keyName || this.defaultKeyName, JSON.stringify(this.encrypt(password)));\n    return true;\n};\nWallet.prototype.load = function (password, keyName) {\n    var keystore = localStorage.getItem(keyName || this.defaultKeyName);\n    if (keystore) {\n        try {\n            keystore = JSON.parse(keystore);\n        }\n        catch (e) {\n        }\n    }\n    return this.decrypt(keystore || [], password);\n};\nif (!storageAvailable('localStorage')) {\n    delete Wallet.prototype.save;\n    delete Wallet.prototype.load;\n}\n/**\n * Checks whether a storage type is available or not\n * For more info on how this works, please refer to MDN documentation\n * https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API#Feature-detecting_localStorage\n *\n * @method storageAvailable\n * @param {String} type the type of storage ('localStorage', 'sessionStorage')\n * @returns {Boolean} a boolean indicating whether the specified storage is available or not\n */\nfunction storageAvailable(type) {\n    var storage;\n    try {\n        storage = window[type];\n        var x = '__storage_test__';\n        storage.setItem(x, x);\n        storage.removeItem(x);\n        return true;\n    }\n    catch (e) {\n        return e && (\n        // everything except Firefox\n        e.code === 22 ||\n            // Firefox\n            e.code === 1014 ||\n            // test name field too, because code might not be present\n            // everything except Firefox\n            e.name === 'QuotaExceededError' ||\n            // Firefox\n            e.name === 'NS_ERROR_DOM_QUOTA_REACHED') &&\n            // acknowledge QuotaExceededError only if there's something already stored\n            (storage && storage.length !== 0);\n    }\n}\nmodule.exports = Accounts;\n"]},"metadata":{},"sourceType":"script"}